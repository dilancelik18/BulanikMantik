FUNCTION_BLOCK Pencere
VAR_INPUT
	oksijenMiktari:REAL;
	yagisMiktari: REAL;

END_VAR
VAR_OUTPUT
	aciklikMiktari:REAL;
	aciklikMiktari2:REAL;
END_VAR

FUZZIFY oksijenMiktari
	TERM az:=(10.9,0)(11,1)(14.8,1)(15.7,1)(16.1,0);
	TERM orta:=(16,0)(16.1,1)(18.5,1)(19.4,0);
	TERM yuksek:= trape 18.5 19.4 20 21.4;
	TERM cokYuksek := (21.4,0)(25,1)(26,1)(27,0);
	
END_FUZZIFY
	
FUZZIFY yagisMiktari
	TERM hafif:=(0,1)(3,1)(4,1)(5,0);
	TERM orta:=(4,0)(5,1)(17,1)(19.8,0);
	TERM kuvvetli:= trape 19 20 40 50;
	TERM cokKuvvetli:=(48,0)(50,1)(51,1)(75,0);
	TERM siddetli:=(73,0)(75,1)(76,1)(100,0);
	TERM asiri:=(99.8,0)(100,1)(101,1);
	
END_FUZZIFY

DEFUZZIFY aciklikMiktari2
    TERM kapali:= (0,0);
	TERM azAcik:= trian 0 15 20;
	TERM yarimAcik :=trape 15 20 30 35  ; //trian 15 30 50;
	TERM cokAcik:= trape 30 35 45 60;
	TERM TamAcik := (45,0)(60,1);
	METHOD : LM ;//COG
	//NC bir değerle değiştirme demektir.

	
		
END_DEFUZZIFY
DEFUZZIFY aciklikMiktari
TERM kapali:= (0,0);
	TERM azAcik:= trian 0 15 20;
	TERM yarimAcik :=trape 15 20 30 35  ; //trian 15 30 50;
	TERM cokAcik:= trape 30 35 45 60;
	TERM TamAcik := (45,0)(60,1);
	METHOD : COG;//
	//NC bir değerle değiştirme demektir.

	
		
END_DEFUZZIFY


RULEBLOCK kuralBlok
	
		AND : MIN; //PROD max çarpım kullanılıyor. BDIF olursa maxı alır ->max(0,U1+U2-1)  0,1 =U1 0,6=u2   yani 0,7-1 =0,3 almış oluruz.
		ACT: MIN;  //PROD kullanılabiir-> üyelik fonskiyonlarının çarpımını alarak değeri elde eder.
		ACCU: MAX; //BSUM ->((1,u1+u2) ın minimumunu alır) ve NSUM->((U1+U2+.../MAX(1,MAX(U1,U2))  kullanılabilir.
		RULE 1:IF oksijenMiktari IS az AND yagisMiktari IS hafif THEN aciklikMiktari IS TamAcik;
		RULE 2:IF oksijenMiktari IS az AND yagisMiktari IS orta THEN aciklikMiktari IS cokAcik;
		RULE 3:IF oksijenMiktari IS az AND yagisMiktari IS kuvvetli THEN aciklikMiktari IS yarimAcik;
		RULE 4:IF oksijenMiktari IS az AND yagisMiktari IS cokKuvvetli THEN aciklikMiktari IS yarimAcik;
		RULE 5:IF oksijenMiktari IS az AND yagisMiktari IS siddetli THEN aciklikMiktari IS azAcik;
		RULE 6:IF oksijenMiktari IS az AND yagisMiktari IS asiri THEN aciklikMiktari IS azAcik;
		
		
		RULE 7:IF oksijenMiktari IS orta AND yagisMiktari IS hafif THEN aciklikMiktari IS TamAcik;
		RULE 8:IF oksijenMiktari IS orta AND yagisMiktari IS orta THEN aciklikMiktari IS cokAcik;
		RULE 9:IF oksijenMiktari IS orta AND yagisMiktari IS kuvvetli THEN aciklikMiktari IS yarimAcik;
		RULE 10:IF oksijenMiktari IS orta AND yagisMiktari IS cokKuvvetli THEN aciklikMiktari IS azAcik;
		RULE 11:IF oksijenMiktari IS orta AND yagisMiktari IS siddetli THEN aciklikMiktari IS kapali;
		RULE 12:IF oksijenMiktari IS orta AND yagisMiktari IS asiri THEN aciklikMiktari IS kapali;
	
		RULE 13:IF oksijenMiktari IS yuksek AND yagisMiktari IS hafif THEN aciklikMiktari IS yarimAcik;
		RULE 14:IF oksijenMiktari IS yuksek AND yagisMiktari IS orta THEN aciklikMiktari IS azAcik;
		RULE 15:IF oksijenMiktari IS yuksek AND yagisMiktari IS kuvvetli THEN aciklikMiktari IS kapali;
		RULE 16:IF oksijenMiktari IS yuksek AND yagisMiktari IS cokKuvvetli THEN aciklikMiktari IS kapali;
		RULE 17:IF oksijenMiktari IS yuksek AND yagisMiktari IS siddetli THEN aciklikMiktari IS kapali;
		RULE 18:IF oksijenMiktari IS yuksek AND yagisMiktari IS asiri THEN aciklikMiktari IS kapali;
		
		RULE 19:IF oksijenMiktari IS cokYuksek AND yagisMiktari IS hafif THEN aciklikMiktari IS kapali;
		RULE 20:IF oksijenMiktari IS cokYuksek AND yagisMiktari IS orta THEN aciklikMiktari IS kapali;
		RULE 21:IF oksijenMiktari IS cokYuksek AND yagisMiktari IS kuvvetli THEN aciklikMiktari IS kapali;
		RULE 22:IF oksijenMiktari IS cokYuksek AND yagisMiktari IS cokKuvvetli THEN aciklikMiktari IS kapali;
		RULE 23:IF oksijenMiktari IS cokYuksek AND yagisMiktari IS siddetli THEN aciklikMiktari IS kapali;
		RULE 24:IF oksijenMiktari IS cokYuksek AND yagisMiktari IS asiri THEN aciklikMiktari IS kapali;
	END_RULEBLOCK

END_FUNCTION_BLOCK